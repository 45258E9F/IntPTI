<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="server" name="CPAchecker on Google App Engine" xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- use this to specifically set the SDK version, otherwise we will check online for the current API version -->
  <!-- next line is used, because 1.9.33 for Java is not online, TODO disable again -->
  <property name="gae-sdk.version" value="1.9.32" />

  <property name="specification.dir" value="${basedir}/config/specification" />
  <property name="configuration.dir" value="${basedir}/config" />

  <property name="lib.dir" value="${basedir}/lib" />
  <property name="lib.dir.gae" value="${lib.dir}/gae" />
  <mkdir dir="${lib.dir.gae}" />

  <property name="war.dir" value="${basedir}/war" />
  <property name="class.dir" value="${war.dir}/WEB-INF/classes" />
  <mkdir dir="${class.dir}" />

  <loadresource property="gae-sdk.version">
    <url url="https://appengine.google.com/api/updatecheck"/>
    <filterchain>
      <linecontainsregexp>
        <regexp pattern="^release: &quot;([0-9.]+)&quot;$"/>
      </linecontainsregexp>
      <replaceregex pattern="^release: &quot;([0-9.]+)&quot;$" replace="\1"/>
      <deletecharacters chars="\r\n"/>
    </filterchain>
  </loadresource>
  <echo message="Using Google AppEngine SDK ${gae-sdk.version}"/>

  <property name="gae-sdk.name" value="appengine-java-sdk-${gae-sdk.version}" />
  <property name="gae-sdk.dir" location="${lib.dir}/${gae-sdk.name}" />
  <property name="gae-dev.port" value="8888" />
  <property name="gae-dev.host" value="localhost" />
  <property name="gae-dev.debugport" value="9999" />

  <import file="${gae-sdk.dir}/config/user/ant-macros.xml" optional="true" />
  <import file="build.xml" as="cpachecker"/>

  <path id="gae.classpath">
    <pathelement path="${class.dir}" />
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${ivy.lib.dir}" includes="runtime/*.jar test/*.jar build/annotations.jar build/error_prone_annotations.jar" />
    <fileset dir="${lib.dir.gae}">
      <include name="**/*.jar" />
    </fileset>
    <fileset dir="${gae-sdk.dir}/lib">
      <include name="shared/servlet-api.jar" />
      <include name="impl/appengine-api.jar" />
      <include name="testing/appengine-testing.jar" />
    </fileset>
  </path>
  <path id="gae.classpath.test">
    <path refid="gae.classpath"/>
    <fileset dir="${gae-sdk.dir}/lib">
      <include name="impl/appengine-api-stubs.jar"/>
    </fileset>
  </path>

  <condition property="ivy.target-prefix" value="cpachecker" else="ivy">
    <antversion atleast="1.9.0"/>
  </condition>

  <target name="resolve-dependencies" depends="load-ivy, update-contrib" unless="ivy.disable">
    <antcall target="${ivy.target-prefix}.resolve-dependencies"/>
    <ivy:resolve file="lib/ivy-gae.xml" conf="build, runtime, test" log="download-only"/>
    <ivy:retrieve sync="true" overwriteMode="different" pattern="${lib.dir.gae}/[conf]/[artifact](-[classifier]).[ext]"/>
  </target>

  <target name="update-contrib" if="ivy.contrib.present" depends="install-contrib"/>
  <target name="install-contrib" depends="load-ivy" description="Retrieve sources and docs for external libraries." unless="ivy.disable">
    <ivy:resolve file="lib/ivy-gae.xml" conf="contrib" log="download-only"/>
    <ivy:retrieve sync="true" pattern="${lib.dir.gae}-contrib/[artifact](-[classifier]).[ext]"/>
   </target>

  <target description="Run all tests" depends="unit-tests" name="tests"/>

  <target description="Run all JUnit tests" depends="build" name="unit-tests">
    <mkdir dir="${junit.dir}"/>
    <junit fork="true" printSummary="true" showOutput="false" failureproperty="junit.failed" timeout="100000">
      <assertions>
        <enable />
      </assertions>
      <formatter type="plain"/>
      <formatter type="xml"/>
      <classpath refid="gae.classpath.test"/>
      <batchtest fork="true" todir="${junit.dir}">
        <fileset dir="${class.dir}">
          <include name="**/appengine/**/*Test.*" />
          <exclude name="**/*$*Test.*"/>
        </fileset>
      </batchtest>
    </junit>
    <junitreport todir="${junit.dir}">
      <fileset dir="${junit.dir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="noframes" />
    </junitreport>
    <move file="junit-noframes.html" tofile="JUnit.html"/>
    <fail if="junit.failed" message="JUnit tests failed, look at JUnit.html"/>
  </target>

  <available file="${lib.dir}/${gae-sdk.name}.zip" property="gae-sdk.expanded"/>
  <target name="getsdk" description="Downloads the Google App Engine SDK." unless="gae-sdk.expanded">
    <get dest="${lib.dir}" src="https://commondatastorage.googleapis.com/appengine-sdks/featured/${gae-sdk.name}.zip" usetimestamp="true" verbose="true" />
    <unzip src="${lib.dir}/${gae-sdk.name}.zip" dest="${lib.dir}" />
  </target>

  <target name="copy-jars" depends="resolve-dependencies" description="Copies all necessary JARs to the war directory.">
    <copy todir="${war.dir}/WEB-INF/lib" flatten="true">
      <fileset dir="${lib.dir}">
        <include name="*.jar" />
      </fileset>
      <fileset dir="${ivy.lib.dir}">
        <include name="runtime/*.jar" />
      </fileset>
      <fileset dir="${lib.dir.gae}">
        <include name="runtime/*.jar" />
      </fileset>
      <fileset dir="${gae-sdk.dir}">
        <include name="lib/user/**/*.jar" />
      </fileset>
    </copy>
  </target>

  <target name="copy-specifications" description="Copies all specifications to the war directory.">
    <copy todir="${war.dir}/WEB-INF/specifications" flatten="true">
      <fileset dir="${specification.dir}">
        <include name="*.spc" />
      </fileset>
    </copy>
  </target>

  <target name="copy-configurations" description="Copies all configurations to the war directory.">
    <copy todir="${war.dir}/WEB-INF/configurations">
      <fileset dir="${configuration.dir}">
        <include name="**/*.properties" />
        <exclude name="**/*.spc" />
      </fileset>
    </copy>
  </target>

  <target name="build" depends="resolve-dependencies,getsdk,copy-jars,copy-specifications,copy-configurations,create-version-file-exact,build-subprojects" description="Builds the project.">
    <copy todir="${class.dir}">
      <fileset dir="${source.dir}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
    <depend srcdir="${source.dir}" destdir="${class.dir}" />
    <echo message="Compiling CPAchecker for Google App Engine"/>
    <javac debug="true"
      debuglevel="source,lines,vars"
      includeAntRuntime="false"
      destdir="${class.dir}"
      source="${source.format}"
      target="${class.format}"
      encoding="UTF-8">
      <src path="${source.dir}"/>
      <classpath refid="gae.classpath"/>
    </javac>
  </target>

  <target name="server" depends="build" description="Starts the development server.">
    <dev_appserver war="${war.dir}" port="${gae-dev.port}" address="${gae-dev.host}" />
  </target>

  <!--
    make sure to set up OAuth2 before deploying
    https://developers.google.com/appengine/docs/java/tools/uploadinganapp#Passwordless_Login_with_OAuth2
  -->
  <target name="deploy" depends="build" description="Deploys the application.">
    <appcfg action="update" war="${war.dir}">
      <options>
        <arg value="--oauth2"/>
        <arg value="--enable_jar_classes"/>
      </options>
    </appcfg>
  </target>

  <target name="deploy-queues" description="Deploys the queue configuration.">
    <appcfg action="update_queues" war="${war.dir}">
      <options>
        <arg value="--oauth2"/>
      </options>
    </appcfg>
  </target>
</project>
