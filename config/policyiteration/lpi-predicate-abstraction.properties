#include ../policy-intervals.properties

analysis.algorithm.CEGAR = true

cegar.refiner = cpa.predicate.PredicateRefiner
solver.interpolationSolver=SMTINTERPOL

# Guessing predicates statically from the CFA is a heuristic that pays off.
cpa.predicate.refinement.performInitialStaticRefinement = true

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.loopstack.LoopstackCPA, cpa.predicate.PredicateCPA, cpa.policyiteration.PolicyCPA

# analysis.checkCounterexamples = true
# counterexample.checker = CPACHECKER
# counterexample.checker.config = ../cex-checks/predicateAnalysis-as-bitprecise-cex-check.properties

[cpa.stator.policy]
joinOnMerge=false
